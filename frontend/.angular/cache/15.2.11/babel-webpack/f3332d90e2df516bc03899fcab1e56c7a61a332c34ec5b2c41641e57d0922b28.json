{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { interval } from 'rxjs';\nimport { Chart } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction AppComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42);\n    i0.ɵɵtext(1, \"Invalid Source IP\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42);\n    i0.ɵɵtext(1, \"Invalid Destination IP\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42);\n    i0.ɵɵtext(1, \"Threat Type is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42);\n    i0.ɵɵtext(1, \"Severity must be 1-10\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42);\n    i0.ɵɵtext(1, \"Valid timestamp required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 43);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 44);\n    i0.ɵɵelement(2, \"circle\", 45)(3, \"path\", 46);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" Analyzing threat... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"h2\", 10);\n    i0.ɵɵtext(2, \"Analysis Result\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 47)(4, \"h3\", 48);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 49);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r6.result.alert);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r6.result.recommendation);\n  }\n}\nfunction AppComponent_div_64_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 50);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 44);\n    i0.ɵɵelement(2, \"circle\", 45)(3, \"path\", 46);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" Loading threat history... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_table_66_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 51)(1, \"td\", 52);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 52);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 52);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 52);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 52);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\", 52);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\", 53);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\", 54)(16, \"button\", 55);\n    i0.ɵɵlistener(\"click\", function AppComponent_table_66_tr_20_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const threat_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.exportToSIEM(threat_r11));\n    });\n    i0.ɵɵtext(17, \"Export to SIEM\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const threat_r11 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(threat_r11.source_ip);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(threat_r11.destination_ip);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(threat_r11.threat_type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(threat_r11.severity);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(threat_r11.timestamp);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(threat_r11.alert);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(threat_r11.recommendation);\n  }\n}\nfunction AppComponent_table_66_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 37)(1, \"thead\", 38)(2, \"tr\")(3, \"th\", 39);\n    i0.ɵɵtext(4, \"Source IP\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\", 39);\n    i0.ɵɵtext(6, \"Destination IP\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 39);\n    i0.ɵɵtext(8, \"Threat Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\", 39);\n    i0.ɵɵtext(10, \"Severity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\", 39);\n    i0.ɵɵtext(12, \"Timestamp\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"th\", 39);\n    i0.ɵɵtext(14, \"Alert\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"th\", 39);\n    i0.ɵɵtext(16, \"Recommendation\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"th\", 39);\n    i0.ɵɵtext(18, \"Actions\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(19, \"tbody\", 40);\n    i0.ɵɵtemplate(20, AppComponent_table_66_tr_20_Template, 18, 7, \"tr\", 41);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(20);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r8.threatHistory);\n  }\n}\nfunction AppComponent_tr_79_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 51)(1, \"td\", 52);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 52);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const risk_r14 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(risk_r14.source_ip);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(risk_r14.risk_score);\n  }\n}\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(http, fb) {\n      this.http = http;\n      this.fb = fb;\n      this.result = null;\n      this.threatHistory = [];\n      this.loading = false;\n      this.loadingHistory = false;\n      this.autoRefresh = false;\n      this.autoRefreshSubscription = null;\n      this.riskScores = [];\n      this.lastUpdated = new Date().toLocaleString();\n      this.threatForm = this.fb.group({\n        source_ip: ['', [Validators.required, this.ipValidator]],\n        destination_ip: ['', [Validators.required, this.ipValidator]],\n        threat_type: ['', Validators.required],\n        severity: [5, [Validators.required, Validators.min(1), Validators.max(10)]],\n        timestamp: ['', Validators.required]\n      });\n      this.loadThreatHistory();\n    }\n    ngOnDestroy() {\n      if (this.autoRefreshSubscription) {\n        this.autoRefreshSubscription.unsubscribe();\n      }\n    }\n    get source_ip() {\n      return this.threatForm.get('source_ip');\n    }\n    get destination_ip() {\n      return this.threatForm.get('destination_ip');\n    }\n    get threat_type() {\n      return this.threatForm.get('threat_type');\n    }\n    get severity() {\n      return this.threatForm.get('severity');\n    }\n    get timestamp() {\n      return this.threatForm.get('timestamp');\n    }\n    ipValidator(control) {\n      const ipRegex = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n      if (!control.value) return null;\n      return ipRegex.test(control.value) ? null : {\n        invalidIP: true\n      };\n    }\n    submitThreat() {\n      if (this.threatForm.invalid) return;\n      this.loading = true;\n      this.result = null;\n      const formValues = this.threatForm.value;\n      let timestamp = formValues.timestamp;\n      if (timestamp) {\n        if (timestamp.length === 16) timestamp += ':00';\n        const localDate = new Date(timestamp);\n        const utcTimestamp = localDate.toISOString().replace('.000Z', '');\n        formValues.timestamp = utcTimestamp;\n      }\n      const payload = Object.assign({}, formValues);\n      this.http.post('http://localhost:8000/analyze-threat/', payload).subscribe({\n        next: res => {\n          this.result = res;\n          this.loading = false;\n          this.loadThreatHistory();\n        },\n        error: err => {\n          var _a, _b, _c;\n          alert(\"❌ Error analyzing threat: \" + (((_c = (_b = (_a = err.error) === null || _a === void 0 ? void 0 : _a.detail) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.msg) || err.message));\n          this.loading = false;\n        }\n      });\n    }\n    loadThreatHistory() {\n      this.loadingHistory = true;\n      this.http.get('http://localhost:8000/threats/').subscribe({\n        next: data => {\n          this.threatHistory = data;\n          this.loadingHistory = false;\n          this.lastUpdated = new Date().toLocaleString();\n          this.computeRiskScores();\n          this.updateCharts();\n        },\n        error: err => {\n          alert(\"❌ Error loading threat history: \" + err.message);\n          this.loadingHistory = false;\n        }\n      });\n    }\n    toggleAutoRefresh() {\n      if (this.autoRefresh) {\n        this.autoRefreshSubscription = interval(10000).subscribe(() => this.loadThreatHistory());\n      } else {\n        if (this.autoRefreshSubscription) {\n          this.autoRefreshSubscription.unsubscribe();\n          this.autoRefreshSubscription = null;\n        }\n      }\n    }\n    computeRiskScores() {\n      const riskMap = new Map();\n      this.threatHistory.forEach(threat => {\n        const currentMax = riskMap.get(threat.source_ip) || 0;\n        if (threat.severity > currentMax) {\n          riskMap.set(threat.source_ip, threat.severity);\n        }\n      });\n      this.riskScores = Array.from(riskMap, ([source_ip, risk_score]) => ({\n        source_ip,\n        risk_score\n      }));\n    }\n    updateCharts() {\n      const ctx = document.getElementById('threatChart');\n      if (ctx) {\n        const threatTypeCounts = new Map();\n        this.threatHistory.forEach(threat => {\n          const count = threatTypeCounts.get(threat.threat_type) || 0;\n          threatTypeCounts.set(threat.threat_type, count + 1);\n        });\n        const labels = Array.from(threatTypeCounts.keys());\n        const data = Array.from(threatTypeCounts.values());\n        new Chart(ctx, {\n          type: 'bar',\n          data: {\n            labels: labels,\n            datasets: [{\n              label: 'Threat Count by Type',\n              data: data,\n              backgroundColor: ['#ff6384', '#36a2eb', '#cc65fe', '#ffce56', '#4bc0c0', '#9966ff'],\n              borderWidth: 1\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n              y: {\n                beginAtZero: true,\n                title: {\n                  display: true,\n                  text: 'Number of Threats'\n                }\n              },\n              x: {\n                title: {\n                  display: true,\n                  text: 'Threat Type'\n                }\n              }\n            }\n          }\n        });\n      }\n      const trendCtx = document.getElementById('trendChart');\n      if (trendCtx) {\n        const dateCounts = new Map();\n        this.threatHistory.forEach(threat => {\n          const date = threat.timestamp.split('T')[0];\n          const count = dateCounts.get(date) || 0;\n          dateCounts.set(date, count + 1);\n        });\n        const sortedDates = Array.from(dateCounts.keys()).sort();\n        const trendData = sortedDates.map(date => dateCounts.get(date) || 0);\n        new Chart(trendCtx, {\n          type: 'line',\n          data: {\n            labels: sortedDates,\n            datasets: [{\n              label: 'Threats per Day',\n              data: trendData,\n              borderColor: '#36a2eb',\n              fill: false\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n              x: {\n                type: 'category',\n                title: {\n                  display: true,\n                  text: 'Date'\n                }\n              },\n              y: {\n                beginAtZero: true,\n                title: {\n                  display: true,\n                  text: 'Number of Threats'\n                }\n              }\n            }\n          }\n        });\n      }\n    }\n    exportToSIEM(threat) {\n      const siemPayload = {\n        source_ip: threat.source_ip,\n        destination_ip: threat.destination_ip,\n        threat_type: threat.threat_type,\n        severity: threat.severity,\n        timestamp: threat.timestamp,\n        alert: threat.alert,\n        recommendation: threat.recommendation\n      };\n      console.log('Exporting to SIEM:', siemPayload);\n      alert(`Simulated export to SIEM for threat from ${threat.source_ip}`);\n    }\n  }\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 80,\n    vars: 14,\n    consts: [[1, \"min-h-screen\", \"bg-gray-100\"], [1, \"bg-indigo-600\", \"text-white\", \"shadow-lg\"], [1, \"max-w-7xl\", \"mx-auto\", \"py-4\", \"px-6\", \"flex\", \"justify-between\", \"items-center\"], [1, \"text-2xl\", \"font-bold\"], [1, \"flex\", \"items-center\", \"space-x-4\"], [1, \"text-sm\"], [1, \"bg-indigo-500\", \"hover:bg-indigo-700\", \"text-white\", \"font-semibold\", \"py-2\", \"px-4\", \"rounded\", \"transition\", \"duration-200\", 3, \"click\"], [1, \"max-w-7xl\", \"mx-auto\", \"py-6\", \"px-6\", \"flex\", \"flex-col\", \"lg:flex-row\", \"gap-6\"], [1, \"lg:w-2/3\", \"space-y-6\"], [1, \"bg-white\", \"shadow-lg\", \"rounded-lg\", \"p-6\"], [1, \"text-xl\", \"font-semibold\", \"mb-4\", \"text-gray-800\"], [1, \"space-y-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"grid\", \"grid-cols-1\", \"sm:grid-cols-2\", \"gap-4\"], [1, \"block\", \"text-sm\", \"font-medium\", \"text-gray-700\"], [\"formControlName\", \"source_ip\", \"placeholder\", \"e.g., 192.168.1.1\", 1, \"mt-1\", \"w-full\", \"p-2\", \"border\", \"rounded\", \"focus:ring-indigo-500\", \"focus:border-indigo-500\"], [\"class\", \"text-red-500 text-sm mt-1\", 4, \"ngIf\"], [\"formControlName\", \"destination_ip\", \"placeholder\", \"e.g., 10.0.0.1\", 1, \"mt-1\", \"w-full\", \"p-2\", \"border\", \"rounded\", \"focus:ring-indigo-500\", \"focus:border-indigo-500\"], [\"formControlName\", \"threat_type\", \"placeholder\", \"e.g., Malware\", 1, \"mt-1\", \"w-full\", \"p-2\", \"border\", \"rounded\", \"focus:ring-indigo-500\", \"focus:border-indigo-500\"], [\"type\", \"number\", \"formControlName\", \"severity\", \"min\", \"1\", \"max\", \"10\", 1, \"mt-1\", \"w-full\", \"p-2\", \"border\", \"rounded\", \"focus:ring-indigo-500\", \"focus:border-indigo-500\"], [1, \"sm:col-span-2\"], [\"formControlName\", \"timestamp\", \"type\", \"datetime-local\", 1, \"mt-1\", \"w-full\", \"p-2\", \"border\", \"rounded\", \"focus:ring-indigo-500\", \"focus:border-indigo-500\"], [\"type\", \"submit\", 1, \"bg-indigo-600\", \"hover:bg-indigo-700\", \"text-white\", \"font-semibold\", \"py-2\", \"px-4\", \"rounded\", \"transition\", \"duration-200\", 3, \"disabled\"], [\"class\", \"mt-4 text-gray-600 flex items-center\", 4, \"ngIf\"], [\"class\", \"bg-white shadow-lg rounded-lg p-6\", 4, \"ngIf\"], [1, \"lg:w-1/3\", \"space-y-6\"], [1, \"text-lg\", \"font-semibold\", \"mb-4\", \"text-gray-800\"], [\"id\", \"threatChart\", 1, \"w-full\"], [\"id\", \"trendChart\", 1, \"w-full\"], [1, \"max-w-7xl\", \"mx-auto\", \"py-6\", \"px-6\", \"space-y-6\"], [1, \"flex\", \"justify-between\", \"items-center\", \"mb-4\"], [1, \"text-xl\", \"font-semibold\", \"text-gray-800\"], [1, \"flex\", \"items-center\", \"space-x-2\"], [\"type\", \"checkbox\", 1, \"h-4\", \"w-4\", \"text-indigo-600\", \"focus:ring-indigo-500\", \"border-gray-300\", \"rounded\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [1, \"text-sm\", \"text-gray-700\"], [\"class\", \"text-gray-600 flex items-center\", 4, \"ngIf\"], [1, \"overflow-x-auto\"], [\"class\", \"min-w-full divide-y divide-gray-200\", 4, \"ngIf\"], [1, \"min-w-full\", \"divide-y\", \"divide-gray-200\"], [1, \"bg-gray-50\"], [1, \"px-6\", \"py-3\", \"text-left\", \"text-xs\", \"font-medium\", \"text-gray-500\", \"uppercase\", \"tracking-wider\"], [1, \"bg-white\", \"divide-y\", \"divide-gray-200\"], [\"class\", \"hover:bg-gray-50 transition duration-150\", 4, \"ngFor\", \"ngForOf\"], [1, \"text-red-500\", \"text-sm\", \"mt-1\"], [1, \"mt-4\", \"text-gray-600\", \"flex\", \"items-center\"], [\"viewBox\", \"0 0 24 24\", 1, \"animate-spin\", \"h-5\", \"w-5\", \"mr-2\"], [\"cx\", \"12\", \"cy\", \"12\", \"r\", \"10\", \"stroke\", \"currentColor\", \"stroke-width\", \"4\", 1, \"opacity-25\"], [\"fill\", \"currentColor\", \"d\", \"M4 12a8 8 0 018-8v8H4z\", 1, \"opacity-75\"], [1, \"p-4\", \"bg-blue-50\", \"rounded-lg\"], [1, \"text-lg\", \"font-medium\", \"text-blue-800\"], [1, \"text-gray-700\", \"mt-2\"], [1, \"text-gray-600\", \"flex\", \"items-center\"], [1, \"hover:bg-gray-50\", \"transition\", \"duration-150\"], [1, \"px-6\", \"py-4\", \"whitespace-nowrap\", \"text-sm\", \"text-gray-900\"], [1, \"px-6\", \"py-4\", \"text-sm\", \"text-gray-900\"], [1, \"px-6\", \"py-4\", \"whitespace-nowrap\"], [1, \"text-indigo-600\", \"hover:text-indigo-900\", \"text-sm\", \"font-medium\", 3, \"click\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"header\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n        i0.ɵɵtext(4, \"AI Threat Intelligence Dashboard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"span\", 5);\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_8_listener() {\n          return ctx.loadThreatHistory();\n        });\n        i0.ɵɵtext(9, \" Refresh \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(10, \"div\", 7)(11, \"div\", 8)(12, \"div\", 9)(13, \"h2\", 10);\n        i0.ɵɵtext(14, \"Analyze Threat\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"form\", 11);\n        i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_15_listener() {\n          return ctx.submitThreat();\n        });\n        i0.ɵɵelementStart(16, \"div\", 12)(17, \"div\")(18, \"label\", 13);\n        i0.ɵɵtext(19, \"Source IP\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 14);\n        i0.ɵɵtemplate(21, AppComponent_div_21_Template, 2, 0, \"div\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\")(23, \"label\", 13);\n        i0.ɵɵtext(24, \"Destination IP\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 16);\n        i0.ɵɵtemplate(26, AppComponent_div_26_Template, 2, 0, \"div\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\")(28, \"label\", 13);\n        i0.ɵɵtext(29, \"Threat Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 17);\n        i0.ɵɵtemplate(31, AppComponent_div_31_Template, 2, 0, \"div\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\")(33, \"label\", 13);\n        i0.ɵɵtext(34, \"Severity (1-10)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(35, \"input\", 18);\n        i0.ɵɵtemplate(36, AppComponent_div_36_Template, 2, 0, \"div\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"div\", 19)(38, \"label\", 13);\n        i0.ɵɵtext(39, \"Timestamp\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(40, \"input\", 20);\n        i0.ɵɵtemplate(41, AppComponent_div_41_Template, 2, 0, \"div\", 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(42, \"button\", 21);\n        i0.ɵɵtext(43, \" Analyze \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(44, AppComponent_div_44_Template, 5, 0, \"div\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(45, AppComponent_div_45_Template, 8, 2, \"div\", 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"div\", 24)(47, \"div\", 9)(48, \"h2\", 25);\n        i0.ɵɵtext(49, \"Threat Type Distribution\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(50, \"canvas\", 26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"div\", 9)(52, \"h2\", 25);\n        i0.ɵɵtext(53, \"Threat Trend Over Time\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(54, \"canvas\", 27);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(55, \"div\", 28)(56, \"div\", 9)(57, \"div\", 29)(58, \"h2\", 30);\n        i0.ɵɵtext(59, \"Threat History\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"label\", 31)(61, \"input\", 32);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_61_listener($event) {\n          return ctx.autoRefresh = $event;\n        })(\"change\", function AppComponent_Template_input_change_61_listener() {\n          return ctx.toggleAutoRefresh();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"span\", 33);\n        i0.ɵɵtext(63, \"Auto-refresh every 10s\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(64, AppComponent_div_64_Template, 5, 0, \"div\", 34);\n        i0.ɵɵelementStart(65, \"div\", 35);\n        i0.ɵɵtemplate(66, AppComponent_table_66_Template, 21, 1, \"table\", 36);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(67, \"div\", 9)(68, \"h2\", 10);\n        i0.ɵɵtext(69, \"Source IP Risk Scores\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(70, \"div\", 35)(71, \"table\", 37)(72, \"thead\", 38)(73, \"tr\")(74, \"th\", 39);\n        i0.ɵɵtext(75, \"Source IP\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(76, \"th\", 39);\n        i0.ɵɵtext(77, \"Risk Score (Max Severity)\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(78, \"tbody\", 40);\n        i0.ɵɵtemplate(79, AppComponent_tr_79_Template, 5, 2, \"tr\", 41);\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\"Last Updated: \", ctx.lastUpdated, \"\");\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.threatForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.source_ip.invalid && ctx.source_ip.touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.destination_ip.invalid && ctx.destination_ip.touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.threat_type.invalid && ctx.threat_type.touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.severity.invalid && ctx.severity.touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.timestamp.invalid && ctx.timestamp.touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.threatForm.invalid || ctx.loading);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.result);\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngModel\", ctx.autoRefresh);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingHistory);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.threatHistory.length > 0);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngForOf\", ctx.riskScores);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.MinValidator, i2.MaxValidator, i2.NgModel, i2.FormGroupDirective, i2.FormControlName],\n    encapsulation: 2\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}